quero que crie em python com interface web de forma simples e funcional o seguinte
--a pasta onde será instalado - nome do projeto MegaSenaConferidor
--estrutura
--os conteudos dos arquivos na pasta
--crie o arquivo REQUIREMENTS
--crie um script ps1 para criar a estrutura em geral levando em concideração que vou rodar este script dentro da pasta MegaSenaConferidor
no script alem de ter a estrura tbm quero que 
# crie o ambiente virtual
# verifique se o ambiente virtual foi criado
# carrega o perfil do PowerShell
# ativa o ambiente virtual diretamente
# informa o usuário para preencher o arquivo requirements.txt
# instala as dependências do requirements.txt
como esta no exemplo abaixo..


# Criando o ambiente virtual
Write-Host "Criando o ambiente virtual..." -ForegroundColor Cyan
python -m venv "$projectDir\venv"

# Verificando se o ambiente virtual foi criado
if (-Not (Test-Path "$projectDir\venv")) {
    Write-Host "Falha ao criar o ambiente virtual. Verifique se o Python esta instalado e configurado corretamente." -ForegroundColor Red
    exit
}

Write-Host "Ambiente virtual criado com sucesso." -ForegroundColor Green

# Carregando o perfil do PowerShell
if (Test-Path $PROFILE) {
    Write-Host "Carregando o perfil do PowerShell..." -ForegroundColor Green
    . $PROFILE
} else {
    Write-Host "O arquivo de perfil do PowerShell nao foi encontrado." -ForegroundColor Yellow
}

# Ativando o ambiente virtual diretamente
$activateScript = Join-Path "$projectDir\venv\Scripts" "Activate.ps1"
if (Test-Path $activateScript) {
    Write-Host "Ativando o ambiente virtual..." -ForegroundColor Green
    . $activateScript
} else {
    Write-Host "O script de ativacao do ambiente virtual não foi encontrado." -ForegroundColor Red
    exit
}

# Informando o usuário para preencher o arquivo requirements.txt
Write-Host "O ambiente esta pronto para configurar as dependencias." -ForegroundColor Cyan
Write-Host "Edite o arquivo requirements.txt em: $projectDir\requirements.txt e insira as dependências necessárias." -ForegroundColor Yellow
Write-Host "Pressione qualquer tecla para continuar a instalacao quando terminar de editar o arquivo requirements.txt..." -ForegroundColor Cyan
Pause

# Instalando as dependências do requirements.txt
if (Test-Path "$projectDir\requirements.txt") {
    Write-Host "Instalando dependencias do requirements.txt..." -ForegroundColor Cyan
    pip install -r "$projectDir\requirements.txt"
    Write-Host "Dependencias instaladas com sucesso.Insira os conteudo nos arquivos gerados" -ForegroundColor Green
} else {
    Write-Host "O arquivo requirements.txt nao foi encontrado, ou esta vazio." -ForegroundColor Red
}








preciso que tudo fique funcional... ok

Principais Funcionalidades e Melhorias
Interface de Progresso e Feedback Visual

Overlay semi-transparente com efeito blur.
Barra de progresso animada com efeito shimmer.
Mensagens de status e progresso em tempo real.
Mensagem de conclusão antes de exibir resultados.
Animações suaves de preenchimento e transição.
Validação e Input do Usuário

Inputs para concursos (início e fim) com validação:  a conferência vai se basear nestes valores.. por favor
O último concurso é preenchido automaticamente.
Validações garantem que o inicial não seja maior que o final.
Validação de números manuais:
Aceita apenas 6 números únicos entre 1 e 60. Crie uma especie de volante igual a da mega sena de 1 a 60 via script
Remove duplicados e formata automaticamente.
Feedback visual e atualização dinâmica do volante.
Organização e Exibição de Resultados

Resultados exibidos individualmente para cada jogo:
Destaque em verde para números acertados.
Exibe número e data do concurso.
Jogos com 4 ou mais acertos:
Destaque visual no card.
Mostra prêmios, quantidade de ganhadores e valor acumulado.
Filtragem dinâmica com toggle para exibir apenas jogos sorteados.
Valores somados por quantidade de acertos e exibidos em vermelho.
Melhorias Visuais e de Usabilidade

Layout responsivo e organizado.
Animações suaves para ações como limpar, transições e carregamentos.
Mensagens de feedback temporárias para ações (sucesso ou erro).
Botões interativos:
Limpar: Muda de cor (vermelho quando ativo) e desativa quando vazio.
Incluir: Valida antes de adicionar jogos.
Sugestão: Gera 6 números aleatórios únicos.
Conferir: Faz validação e verifica jogos.
Funcionalidades Avançadas

Suporte a drag and drop:
Área aprimorada com feedback visual.
Aceita arquivos .txt e .xlsx com validação.
Responsividade melhorada e suporte a impressão.
Tratamento robusto de erros e mensagens claras ao usuário.
Integração aprimorada com a API:
Exibe datas e local do sorteio.
Mostra prêmios acumulados e informações precisas.
Funcionalidades Agrupadas
Inclusão de jogos: Drag and drop ou entrada manual validada.
Mensagens de feedback: Notificações para ações com animações suaves.
Conferência de jogos: Verificação detalhada com exibição dos resultados.
Contagem e cálculo de acertos: Destaques, valores somados e prêmios exibidos.
Atualizações em tempo real: Inputs, volante e barra de progresso dinâmicos.
Organização visual: Layout, animações e responsividade aprimorados.